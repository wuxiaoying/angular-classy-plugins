// Generated by CoffeeScript 1.7.1
(function() {
  var app;

  app = angular.module('app', ['classy', 'classy-extends']);

  app.factory('TestService', function() {
    return function() {
      return 'Test';
    };
  });

  app.classy.controller({
    name: 'ParentCtrl',
    inject: ['$scope', 'TestService'],
    init: function() {
      this.logs = [];
    },
    baseFunc: function() {
      this.logs.push('This only exists on the parent');
    },
    someFunc: function() {
      this.logs.push('Parent');
    }
  });

  app.classy.controller({
    name: 'ChildCtrl',
    "extends": 'ParentCtrl',
    init: function() {
      this._super(arguments);
    },
    someFunc: function() {
      this._super(arguments);
      this.logs.push('Child');
    },
    getServiceText: function() {
      return this.TestService();
    }
  });

  describe('Classy extends (classy-extends.coffee)', function() {
    var childController, scope;
    beforeEach(module('app'));
    childController = null;
    scope = null;
    beforeEach(function() {
      inject(function($controller, $rootScope) {
        scope = $rootScope.$new();
        childController = $controller('ChildCtrl', {
          $scope: scope
        });
      });
    });
    it('should call the base class function if the function does not exist on the child class', function() {
      scope.baseFunc();
      expect(childController.logs).toEqual(['This only exists on the parent']);
    });
    it('should be able to call the super function', function() {
      scope.someFunc();
      expect(childController.logs).toEqual(['Parent', 'Child']);
    });
    it('should inject base class dependencies correctly', function() {
      expect(scope.getServiceText()).toBe('Test');
    });
  });

}).call(this);
